{"meta":{"title":"又尔enter的blog","subtitle":null,"description":"Android开发小小鸟","author":"又尔enter","url":"http://yoursite.com"},"pages":[{"title":"延时","date":"2018-04-15T02:50:34.014Z","updated":"2018-04-15T02:50:34.014Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2018-04-15T02:50:41.435Z","updated":"2018-04-15T02:50:41.435Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"表格筛选控件","slug":"grid","date":"2018-04-15T04:03:32.000Z","updated":"2018-04-15T04:11:54.275Z","comments":true,"path":"2018/04/15/grid/","link":"","permalink":"http://yoursite.com/2018/04/15/grid/","excerpt":"","text":"最近在做一个ERP的项目，产品要求做一个类似京东，淘宝，伙伴云表格的筛选控件，如下图所示： S70301-160019.jpg 思路 这个页面其实一个主页面的Activity，右滑弹出一个抽屉DrawerLayout，抽屉其实是一个fragment，我们主要的布局就在fragment里面。而这个筛选控件其中的一个其实是下拉菜单。当然原生的spinner太丑而且不符合要求，所以我用一个LinearLayout包含一个TextView（drawableRight下拉图标），加一个listview来构造。 行动代码思路有了，接下来就是代码行动了，首先我们封装这个控件。public class MySpinnerView extends LinearLayout implements MySpinnerAdapter.RadioButtonClick &#123; //用于下拉图标的动画 private static final int MAX_LEVEL = 10000; //用于状态保存 private static final String INSTANCE_STATE = &quot;instance_state&quot;; private static final String SELECTED_INDEX = &quot;selected_index&quot;; private static final String IS_POPUP_SHOWING = &quot;is_popup_showing&quot;; private int selectedIndex;//选中的位置 private Drawable drawable;//下拉图标 private ListView listView; private MySpinnerAdapter adapter;//用于listview的adapter private AdapterView.OnItemClickListener onItemClickListener; private AdapterView.OnItemSelectedListener onItemSelectedListener; private boolean isArrowHide, isShowing;//是否显示 private int textColor; private int backgroundSelector;//选中颜色 private int datasId; private TextView titleView;//title private String titleText; private int defaultPadding;//默认padding private List&lt;FilterDataItem&gt; mFilterDataItems;//筛选的数据源 private String startDate, endDate; private int lastPos = -1;//保存最近一次选中的位置 public MySpinnerView(Context context) &#123; super(context); getAttrs(context, null); init(context, null); &#125; public MySpinnerView(Context context, AttributeSet attrs) &#123; super(context, attrs); getAttrs(context, attrs); init(context, attrs); &#125; public MySpinnerView(Context context, AttributeSet attrs, int defStyleAttr) &#123; super(context, attrs, defStyleAttr); getAttrs(context, attrs); init(context, attrs); &#125; @Override public Parcelable onSaveInstanceState() &#123; Bundle bundle = new Bundle(); bundle.putParcelable(INSTANCE_STATE, super.onSaveInstanceState()); bundle.putInt(SELECTED_INDEX, selectedIndex); bundle.putBoolean(IS_POPUP_SHOWING, isShowing); dismissDropDown(); return bundle; &#125; @Override public void onRestoreInstanceState(Parcelable savedState) &#123; if (savedState instanceof Bundle) &#123; Bundle bundle = (Bundle) savedState; selectedIndex = bundle.getInt(SELECTED_INDEX); if (adapter != null) &#123; setTitle(selectedIndex); // adapter.notifyItemSelected(selectedIndex); &#125; if (bundle.getBoolean(IS_POPUP_SHOWING)) &#123; if (isShowing) &#123; post(new Runnable() &#123; @Override public void run() &#123; showDropDown(); &#125; &#125;); &#125; &#125; savedState = bundle.getParcelable(INSTANCE_STATE); &#125; super.onRestoreInstanceState(savedState); &#125; /** * 获取相关属性attr * * @param context * @param attrs */ private void getAttrs(Context context, AttributeSet attrs) &#123; // TODO Auto-generated constructor stub // 通过这个方法，将你在attrs.xml中定义的declare=styleable // 的所有属性的值存储到TypedArray中 TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.MySpinnerView); // 从TypedArray中取出对应的值来为要设置的属性赋值 titleText = ta.getString(R.styleable.MySpinnerView_msv_title); datasId = ta.getResourceId(R.styleable.MySpinnerView_msv_array, 0); defaultPadding = getResources().getDimensionPixelSize(R.dimen.one_and_a_half_grid_unit); setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);// setPadding(getResources().getDimensionPixelSize(R.dimen.three_grid_unit), defaultPadding, defaultPadding,// defaultPadding); setClickable(true); backgroundSelector = ta.getResourceId(R.styleable.MySpinnerView_msv_backgroundSelector, R.drawable.spinner_selector); textColor = ta.getColor(R.styleable.MySpinnerView_msv_textTint, -1); isShowing = ta.getBoolean(R.styleable.MySpinnerView_msv_isShow, false); isArrowHide = ta.getBoolean(R.styleable.MySpinnerView_msv_hideArrow, false); if (!isArrowHide) &#123; //不隐藏则显示图标 Drawable basicDrawable = ContextCompat.getDrawable(context, R.drawable.spinner_arrow); int resId = ta.getColor(R.styleable.MySpinnerView_msv_arrowTint, -1); if (basicDrawable != null) &#123; drawable = DrawableCompat.wrap(basicDrawable); if (resId != -1) &#123; DrawableCompat.setTint(drawable, resId); &#125; &#125; &#125; ta.recycle(); &#125; private void init(final Context context, AttributeSet attrs) &#123; setOrientation(VERTICAL); titleView = new TextView(context); titleView.setText(titleText); titleView.setPadding(defaultPadding, defaultPadding, defaultPadding, defaultPadding); if (!isArrowHide) &#123; titleView.setCompoundDrawablesWithIntrinsicBounds(null, null, drawable, null); &#125; listView = new ListViewInSrcollView(context); listView.setId(getId()); listView.setDivider(null); listView.setItemsCanFocus(true); //隐藏scrollbars listView.setVerticalScrollBarEnabled(false); listView.setHorizontalScrollBarEnabled(false); listView.setBackgroundResource(backgroundSelector); //数据源，这里测试用的是assets中的json，开发者可自行构造bean和数据源 if (datasId != 0) &#123; final String[] temp = getResources().getStringArray(datasId); mFilterDataItems = new ArrayList&lt;&gt;(); for (String aTemp : temp) &#123; mFilterDataItems.add(new FilterDataItem(0, aTemp, false)); &#125; adapter = new MySpinnerAdapter(mFilterDataItems, this); setAdapterInternal(adapter); &#125; listView.setOnItemClickListener(new AdapterView.OnItemClickListener() &#123; @Override public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) &#123; spinnerClick(position); &#125; &#125;); addView(titleView); addView(listView); if (isShowing) &#123; listView.setVisibility(View.VISIBLE); &#125; else &#123; listView.setVisibility(View.GONE); &#125; &#125; /** * 获取当前选中的位置 * * @return */ public int getSelectedIndex() &#123; return selectedIndex; &#125; /** * 设置当前选中位置 * * @param position 位置 */ public void setSelectedIndex(int position) &#123; if (adapter != null) &#123; if (position &gt;= 0 &amp;&amp; position &lt;= adapter.getCount()) &#123; //adapter.notifyItemSelected(position); selectedIndex = position; setTitle(position); &#125; else &#123; throw new IllegalArgumentException(&quot;Position must be lower than adapter count!&quot;); &#125; &#125; &#125; public void addOnItemClickListener(@NonNull AdapterView.OnItemClickListener onItemClickListener) &#123; this.onItemClickListener = onItemClickListener; &#125; public void setOnItemSelectedListener(@NonNull AdapterView.OnItemSelectedListener onItemSelectedListener) &#123; this.onItemSelectedListener = onItemSelectedListener; &#125; /** * 设置adapter * * @param adapter */ private void setAdapterInternal(MySpinnerAdapter adapter) &#123; // If the adapter needs to be settled again, ensure to reset the selected index as well //selectedIndex = 0; listView.setAdapter(adapter); //setTitle(selectedIndex); &#125; /** * 设置adapter * * @param filterDataItems 数据源 */ public void setAdapter(List&lt;FilterDataItem&gt; filterDataItems) &#123; this.mFilterDataItems = filterDataItems; this.adapter = new MySpinnerAdapter(filterDataItems, this); setAdapterInternal(adapter); &#125; @Override public boolean onTouchEvent(@NonNull MotionEvent event) &#123; if (event.getAction() == MotionEvent.ACTION_UP) &#123; if (!isShowing) &#123; showDropDown(); &#125; else &#123; dismissDropDown(); &#125; &#125; return super.onTouchEvent(event); &#125; /** * 点击动画效果 * * @param shouldRotateUp */ private void animateArrow(boolean shouldRotateUp) &#123; int start = shouldRotateUp ? 0 : MAX_LEVEL; int end = shouldRotateUp ? MAX_LEVEL : 0; ObjectAnimator animator = ObjectAnimator.ofInt(drawable, &quot;level&quot;, start, end); animator.setInterpolator(new LinearOutSlowInInterpolator()); animator.start(); &#125; /** * 隐藏 */ public void dismissDropDown() &#123; if (!isArrowHide) &#123; animateArrow(false); &#125; listView.setVisibility(View.GONE); isShowing = false; &#125; /** * 展开 */ public void showDropDown() &#123; if (!isArrowHide) &#123; animateArrow(true); &#125; listView.setVisibility(View.VISIBLE); isShowing = true; &#125; public void setTintColor(@ColorRes int resId) &#123; if (drawable != null &amp;&amp; !isArrowHide) &#123; DrawableCompat.setTint(drawable, ContextCompat.getColor(getContext(), resId)); &#125; &#125; public void setTitle(int position) &#123; String text = null; lastPos = position; if (adapter.getItem(position) instanceof String) &#123; text = titleText + &quot;&lt;font color=\\&quot;red\\&quot;&gt; &quot; + &quot;(&quot; + adapter.getItem(position).toString() + &quot;)&quot; + &quot;&lt;/font&gt;&quot;; &#125; if (adapter.getItem(position) instanceof FilterDataItem) &#123; FilterDataItem bean = (FilterDataItem) adapter.getItem(position); text = titleText + &quot;&lt;font color=\\&quot;#3b597b\\&quot;&gt; &quot; + &quot;(&quot; + bean.getName() + &quot;)&quot; + &quot;&lt;/font&gt;&quot;; &#125; titleView.setText(Html.fromHtml(text)); &#125; /** * 获取选中的数据源 * * @return */ public FilterDataItem getSelectedData() &#123; if (selectedIndex &gt;= 8) &#123; FilterDataItem item = new FilterDataItem(); item.setName(startDate + &quot;|&quot; + endDate); item.setId(-5); if (TextUtils.isEmpty(startDate) || TextUtils.isEmpty(endDate)) &#123; item.setChecked(false); &#125; else &#123; item.setChecked(true); &#125; return item; &#125; else &#123; return mFilterDataItems.get(selectedIndex); &#125; &#125; @Override public void click(int position) &#123; spinnerClick(position); &#125; /** * 点击方法 * * @param position */ private void spinnerClick(int position) &#123; final FilterDataItem bean = mFilterDataItems.get(position); System.out.println(&quot;点击的位置&quot; + position); if (!bean.isChecked()) &#123; //更改点击状态 bean.setChecked(true); //把最近的已经设为true的变为false if (lastPos != -1) &#123; FilterDataItem item = mFilterDataItems.get(lastPos); item.setChecked(false); &#125; &#125; selectedIndex = position; final int tempPos = position; if (bean.getName().contains(&quot;时间&quot;)) &#123; Calendar c = Calendar.getInstance(); // 直接创建一个DatePickerDialog对话框实例，并将它显示出来 new DatePickerDialog(getContext(), // 绑定监听器 new DatePickerDialog.OnDateSetListener() &#123; @Override public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) &#123; if (bean.getName().contains(&quot;开始时间&quot;)) &#123; startDate = year + &quot;.&quot; + (monthOfYear + 1) + &quot;.&quot; + dayOfMonth; bean.setName(&quot;开始时间 &quot; + startDate); &#125; else &#123; endDate = year + &quot;.&quot; + (monthOfYear + 1) + &quot;.&quot; + dayOfMonth; bean.setName(&quot;结束时间 &quot; + endDate); &#125; adapter.notifyDataSetChanged(); setTitle(tempPos); &#125; &#125; // 设置初始日期 , c.get(Calendar.YEAR), c.get(Calendar.MONTH), c .get(Calendar.DAY_OF_MONTH)).show(); &#125; else &#123; postDelayed(new Runnable() &#123; @Override public void run() &#123; dismissDropDown(); &#125; &#125;, 500); adapter.notifyDataSetChanged(); setTitle(position); &#125; &#125; 然后就是在fragment的布局文件中引入它fragment_filter.xml12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:background=&quot;@color/white&quot; android:orientation=&quot;vertical&quot; &gt; &lt;RelativeLayout android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;50dp&quot;&gt; &lt;TextView android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_centerInParent=&quot;true&quot; android:text=&quot;@string/filter&quot;/&gt; &lt;TextView android:id=&quot;@+id/tvEnsure&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_alignParentRight=&quot;true&quot; android:layout_centerVertical=&quot;true&quot; android:layout_marginRight=&quot;10dp&quot; android:background=&quot;@drawable/corner_btn&quot; android:padding=&quot;5dp&quot; android:text=&quot;@string/ensure&quot; android:textColor=&quot;@color/white&quot;/&gt; &lt;/RelativeLayout&gt; &lt;ScrollView android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;LinearLayout android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:orientation=&quot;vertical&quot;&gt; &lt;com.dy.filter.MySpinnerView android:id=&quot;@+id/groupView&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; app:msv_backgroundSelector=&quot;@color/radio_bg&quot; app:msv_isShow=&quot;false&quot; app:msv_title=&quot;对象&quot;/&gt; &lt;com.dy.filter.MySpinnerView android:id=&quot;@+id/exponentView&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; app:msv_backgroundSelector=&quot;@color/radio_bg&quot; app:msv_isShow=&quot;false&quot; app:msv_title=&quot;指数&quot;/&gt; &lt;com.dy.filter.MySpinnerView android:id=&quot;@+id/timeView&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; app:msv_backgroundSelector=&quot;@color/radio_bg&quot; app:msv_isShow=&quot;false&quot; app:msv_title=&quot;查询时间&quot;/&gt; &lt;/LinearLayout&gt; &lt;/ScrollView&gt;&lt;/LinearLayout&gt; 最后上activity的布局文件，就是一个drawerlayout12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;android.support.v4.widget.DrawerLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:id=&quot;@+id/drawer_layout&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; &gt; &lt;LinearLayout android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:orientation=&quot;vertical&quot;&gt; &lt;RelativeLayout android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:background=&quot;@color/blue&quot;&gt; &lt;TextView android:id=&quot;@+id/tvBack&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_centerVertical=&quot;true&quot; android:layout_marginLeft=&quot;10dp&quot; android:text=&quot;返回&quot; android:textColor=&quot;@color/white&quot;/&gt; &lt;TextView android:id=&quot;@+id/tvFilterExponent&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_centerInParent=&quot;true&quot; android:textColor=&quot;@color/white&quot; tools:text=&quot;订单金额&quot;/&gt; &lt;TextView android:id=&quot;@+id/tvFilter&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_alignParentRight=&quot;true&quot; android:layout_margin=&quot;10dp&quot; android:drawableLeft=&quot;@drawable/ic_action_select&quot; android:gravity=&quot;center&quot; android:text=&quot;筛选&quot; android:textColor=&quot;@color/white&quot;/&gt; &lt;/RelativeLayout&gt; &lt;/LinearLayout&gt; &lt;!-- 抽屉内容 --&gt; &lt;FrameLayout android:id=&quot;@+id/drawer_content&quot; android:layout_width=&quot;280dp&quot; android:layout_height=&quot;match_parent&quot; android:layout_gravity=&quot;end&quot; android:clickable=&quot;true&quot; /&gt;&lt;/android.support.v4.widget.DrawerLayout&gt; 上效果图 123.jpg 最后上demo地址，点击github","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"自定义View","slug":"自定义View","permalink":"http://yoursite.com/tags/自定义View/"}]},{"title":"测试中文title","slug":"test","date":"2018-04-14T16:06:14.977Z","updated":"2018-04-15T02:53:32.236Z","comments":true,"path":"2018/04/15/test/","link":"","permalink":"http://yoursite.com/2018/04/15/test/","excerpt":"","text":"Document 哈哈，测试中文！！！","categories":[{"name":"Test","slug":"Test","permalink":"http://yoursite.com/categories/Test/"}],"tags":[{"name":"PS3","slug":"PS3","permalink":"http://yoursite.com/tags/PS3/"},{"name":"Games","slug":"Games","permalink":"http://yoursite.com/tags/Games/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-04-14T13:23:41.917Z","updated":"2018-04-14T15:58:58.848Z","comments":true,"path":"2018/04/14/hello-world/","link":"","permalink":"http://yoursite.com/2018/04/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}